<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>渗透：数据包扩展</title>
      <link href="/2022/01/09/%E6%B8%97%E9%80%8F%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%8C%85%E6%89%A9%E5%B1%95/"/>
      <url>/2022/01/09/%E6%B8%97%E9%80%8F%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%8C%85%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP-S数据包"><a href="#HTTP-S数据包" class="headerlink" title="HTTP/S数据包"></a>HTTP/S数据包</h2><p>Request：请求数据包</p><p>Response：返回数据包</p><p><img src="https://gitee.com/mie1732/emc/raw/master/img/202201092229950.png"></p><p>有代理：实现两次修改</p><p>Proxy：代理服务器</p><p><img src="https://gitee.com/mie1732/emc/raw/master/img/202201092229796.png"></p><p>http：三层，明文   HTTP   TCP   IP</p><p>https：四层，加密  HTTP  SSL/TLS  TCP  IP（安全性高）</p><p><img src="https://gitee.com/mie1732/emc/raw/master/img/202201092229254.png"></p><h4 id="HTTP-简要通信过程"><a href="#HTTP-简要通信过程" class="headerlink" title="HTTP 简要通信过程"></a>HTTP 简要通信过程</h4><p>建立连接——&gt;发送请求数据包——&gt;返回响应数据包——&gt;关闭连接 </p><p>1.浏览器建立与 web 服务器之间的连接</p><p>2.浏览器将请求数据打包（生成请求数据包）并发送到 web 服务器 </p><p>3.web 服务器将处理结果打包（生成响应数据包）并发送给浏览器 </p><p>4.web 服务器关闭连接</p><h2 id="Request请求数据包数据格式"><a href="#Request请求数据包数据格式" class="headerlink" title="Request请求数据包数据格式"></a>Request请求数据包数据格式</h2><p>1.请求行：请求类型/请求资源路径、协议的版本和类型 </p><p>2.请求头：一些键值对，浏览器与 web 服务器之间都可以发送，特定的某种含义</p><p>3.空行：请求头与请求体之间用一个空行隔开</p><p>4.请求体：要发送的数据(一般 post 提交会使用)</p><p>例：user=123&amp;pass=123</p><p>eg:</p><pre><code># Request HeadersPOST /adduser HTTP/1.1Host: localhost:8030Connection: keep-aliveContent-Length: 16Pragma: no-cacheCache-Control: no-cacheOrigin: chrome-extension://fdmmgilgnpjigdojojpjoooidkmcomcmUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36   //不同平台不一样Content-Type: application/x-www-form-urlencodedAccept: */*Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9# Form Dataname=name&amp;age=11#请求行请求行由三个标记组成：请求方法、请求 URL 和 HTTP 版本，它们用空格分享。例如：GET /index.html HTTP/1.1HTTP 规划定义了 8 种可能的请求方法：GET：检索 URL 中标识资源的一个简单请求HEAD：与 GET 方法相同，服务器只返回状态行和头标，并不返回请求文档POST：服务器接受被写入客户端输出流中的数据的请求PUT：服务器保存请求数据作为指定 URL 新内容的请求DELETE：服务器删除 URL 中命令的资源的请求OPTIONS：关于服务器支持的请求方法信息的请求TRACE：web 服务器反馈 Http 请求和其头标的请求CONNECT ：已文档化，但当前未实现的一个方法，预留做隧道处理#请求头由关键字/值对组成，每行一对，关键字和值用冒号分享。请求头标通知服务器腾于客户端的功能和标识。HOST: 主机或域名地址Accept：指浏览器或其他客户可以接受的 MIME 文件格式。Servlet 可以根据它判断并返回适当的文件格式。User-Agent：是客户浏览器名Host：对应网址 URL 中的 Web 名称和端口号。Accept-Langeuage：指出浏览器可以接受的语言种类，如 en 或 en-us，指英语。connection：用来告诉服务器是否可以维持固定的 HTTP 连接。http 是无连接的，HTTP/1.1 使用 Keep-Alive为默认值，这样，当浏览器需要多个文件时(比如一个 HTML 文件和相关的图形文件)，不需要每次都建立连接Cookie：浏览器用这个属性向服务器发送 Cookie。Cookie 是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能。Referer(来源):表明产生请求的网页URL。如/icconcept/index.jsp中点击一个链接到网页/icwork/search ，在向服务器发送的GET/icwork/search中的请求中，Referer是http://hostname:8080/icconcept/index.jsp。这个属性可以用来跟踪Web请求是从什么网站来的。Content-Type：用来表名 request 的内容类型。可以用 HttpServletRequest 的 getContentType()方法取得。Accept-Charset：指出浏览器可以接受的字符编码。英文浏览器的默认值是 ISO-8859-1.Accept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到 Web 响应之后先解码，然后再检查文件格式。#空行最后一个请求头标之后是空行，发送回车符和退行，通知服务器以下不再有头标。#请求数据使用 POST 传送，最常使用的是 Content-Type 和 Content-Length 头标。</code></pre><h2 id="Request返回数据包数据格式"><a href="#Request返回数据包数据格式" class="headerlink" title="Request返回数据包数据格式"></a>Request返回数据包数据格式</h2><p>一个响应由四个部分组成；状态行、响应头标、空行、响应数据。 </p><p>1.状态行：协议版本、数字形式的状态代码和状态描述，个元素之间以空格分隔 </p><p>2.响应头标：包含服务器类型、日期、长度、内容类型等 </p><p>3.空行：响应头与响应体之间用空行隔开 </p><p>4.响应数据：浏览器会将实体内容中的数据取出来，生成相应的页面</p><h4 id="HTTP-响应码（status）："><a href="#HTTP-响应码（status）：" class="headerlink" title="HTTP 响应码（status）："></a>HTTP 响应码（status）：</h4><pre><code>1xx：信息，请求收到，继续处理 2xx：成功，行为被成功地接受、理解和采纳 3xx：重定向，为了完成请求，必须进一步执行的动作 4xx：客户端错误 5xx：服务器错误200：存在文件403：存在文件夹3xx：均可能存在404：都不存在500：均可能存在</code></pre><p><img src="https://gitee.com/mie1732/emc/raw/master/img/202201092230998.png" alt="image-20211002190124418"></p><h2 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h2><p>​         1、可通过修改数据包来修改网页信息</p><p>​         2、浏览器与模拟器访问的抓包区别，按照APP的格式在浏览器访问</p><h4 id="来源页伪造："><a href="#来源页伪造：" class="headerlink" title="来源页伪造："></a>来源页伪造：</h4><p>​        1、referer：用来跟踪Web请求是从什么网站来的。</p><p>​        （若没有则表示直接访问）</p><p>​        2、User-Agent：访问途径信息，电脑浏览器/手机访问信息</p><p>​         （NetType：微信网络类型字段）</p><h4 id="PHP的ip获取方式：（可用于伪造ip等）"><a href="#PHP的ip获取方式：（可用于伪造ip等）" class="headerlink" title="PHP的ip获取方式：（可用于伪造ip等）"></a>PHP的ip获取方式：（可用于伪造ip等）</h4><p>1、X_FORWARDED_FOR：HTTP 扩展头部，主要是为了让 Web 服务器获取访问用户的真实 IP 地址（未必真实）</p><p>2、REMOTE_ADDR：一般用于抓取访客ip，但不能抓取有proxy访客的真实ip。和 Web 服务器握手的 IP 是什么（这个不能伪造）。很多用户都通过代理来访问服务器的，那么假如使用该全局变量，PHP获取到的 IP 就是代理服务器的 IP（不是用户的）。</p><p>3、CLIENT_IP：</p><p>一个请求可能经过的路径：</p><p>客户端=&gt;（正向代理=&gt;透明代理=&gt;服务器反向代理=&gt;）Web服务器</p>]]></content>
      
      
      <categories>
          
          <category> 小迪渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片格式区别</title>
      <link href="/2021/11/11/%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F%E5%8C%BA%E5%88%AB/"/>
      <url>/2021/11/11/%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="1、BMP"><a href="#1、BMP" class="headerlink" title="1、BMP"></a>1、BMP</h3><p>Bitmap（位图）</p><p>windows操作系统中的标准图像文件格式，应用广泛图像信息丰富，几乎不进行压缩。</p><p>缺点：占用磁盘空间过大（在单机比较流行）</p><h3 id="2、JPEG-amp-JPG"><a href="#2、JPEG-amp-JPG" class="headerlink" title="2、JPEG&amp; JPG"></a>2、JPEG&amp; JPG</h3><p>Joint Photographic Experts Group</p><p>JPEG是文件格式，JPG是扩展名。JPEG的文件格式一般有两种文件扩展名：.jpg和.jpeg。</p><p>一种有损压缩格式，能够将图像压缩在很小的储存空间，图像中重复或不重要的资料会被丢失，体积小，兼容性好</p><p>缺点：某些操作系统不支持四位文件后缀，因此常用jpg；容易造成图像数据损伤</p><h3 id="3、PNG"><a href="#3、PNG" class="headerlink" title="3、PNG"></a>3、PNG</h3><p>Portable Network Graphics（便携式网络图形）</p><p>支持无损压缩的位图图形格式，支持<u>索引</u>、<u>灰度</u>、RGB三种颜色方案以及<u>Alpha通道</u>等特性。能将文件压缩（非失真压缩）到极限利于传输但保留所有图像品质。显示速度快（在浏览器上采用流式浏览，即使经过交错处理的图像会在完全下载之前提供浏览者一个基本的图像内容，然后再逐渐清晰起来。它允许连续读出和写入图像数据）。支持透明效果。</p><h3 id="4、TIFF"><a href="#4、TIFF" class="headerlink" title="4、TIFF"></a>4、TIFF</h3><p>Tag Image File Format（标签图像文件格式）</p><p>拓展名：.tif</p><p>主要用来存储包括照片和艺术图在内的图像，支持多色彩系统，独立于操作系统。印刷业使用广泛。</p><p>缺点：因采用多种压缩方法，程序设计复杂度高</p><h3 id="5、GIF"><a href="#5、GIF" class="headerlink" title="5、GIF"></a>5、GIF</h3><p>Graphics Interchange Format（图形交换格式）</p><p>用于以超文本标志语言方式显示索引彩色图像，在因特网和其他在线服务系统上得到广泛应用。</p><p>压缩比高，占用内存少</p><h3 id="6、PCX"><a href="#6、PCX" class="headerlink" title="6、PCX"></a>6、PCX</h3><p>PC Paintbrush Exchange</p><p>pcx压缩为无损压缩。</p><p>最广泛接受的DOS图像标准之一，然而这种使用格式已经被其他更复杂的图像格式如GIF、JPEG、PNG渐渐取代。</p><p>缺点：不受web浏览器支持</p><h3 id="7、TGA"><a href="#7、TGA" class="headerlink" title="7、TGA"></a>7、TGA</h3><p>（计算机图像文件格式）</p><p>结构简单，属于一种图形、图像数据的通用格式，是计算机生成图像向电视转换的一种首选格式。</p><p>最大特点是可以做出不规则形状的图形、图像文件。</p><p>采用的不失真的压缩方式</p><h3 id="8、FPX"><a href="#8、FPX" class="headerlink" title="8、FPX"></a>8、FPX</h3><p>影像被存储成一系列高低不同的分辨率，因此当影像被放大时仍可维持维持影像的质素。</p><p>修饰FPX影像时，只会处理被修饰的部分，减少处理器以及记忆体的负担，减少影像处理时间。</p><h3 id="9、SVG"><a href="#9、SVG" class="headerlink" title="9、SVG"></a>9、SVG</h3><p>Scalable Vector Graphics（矢量图形）</p><p>开放标准的矢量图形语言（基于XML），可任意放大图形显示，边缘异常清晰，其中的文字可保留可编辑可搜寻的状态，无文字体的限制，生成文件小，下载快，适用于设计高分辨率的web图形网页（用户可直接用代码描绘图像）</p><h3 id="10、PSD"><a href="#10、PSD" class="headerlink" title="10、PSD"></a>10、PSD</h3><p>Photoshop Document</p><p>非压缩的原始文件保存格式。</p><p>photoshop图像处理软件的专用文件格式，扫描仪不能直接生成该格式文件。</p><p>PSD文件有时容量会很大，但由于可以保留所有原始信息，在图像处理中对于尚未制作完成的图像，一般选用PSD格式</p><h3 id="11、CDR"><a href="#11、CDR" class="headerlink" title="11、CDR"></a>11、CDR</h3><p>著名绘图软件CoreIDRAW的专用图形文件格式。</p><p>CDR可以记录文件的属性、位置和分页等。但兼容度较差，只能在CoreIDraw中打开</p><h3 id="12、PCD"><a href="#12、PCD" class="headerlink" title="12、PCD"></a>12、PCD</h3><p>Kodak PhotoCD（照片激光唱片），文件扩展名：.pod</p><p>Kodak开发的一种Photo CD文件格式，其他软件系统只能对其进行读取。该格式使用YCC色彩模式定义图像中的色彩。</p><p>YCC和CIE色彩空间包含比显示器和打印设备的RGB色和 CMYK色多得多的色彩。PhotoCD图像大多具有非常高的质量。</p><h3 id="13、EXIF"><a href="#13、EXIF" class="headerlink" title="13、EXIF"></a>13、EXIF</h3><p>与JPEG格式相同，区别：除保存图像数据外，还能存储摄影日期，使用光圈，快门，闪光灯数据等曝光资料和附带信息以及小尺寸图像</p><h3 id="14、DXF"><a href="#14、DXF" class="headerlink" title="14、DXF"></a>14、DXF</h3><p>Drawing Exchange Format</p><p>为AutoCAD的图形文件格式，它以ASCLL方式存储图形，咋表现图形大小方面十分精确，可被CoreIDraw和3DS等大型软件编辑</p><h3 id="15、UFO"><a href="#15、UFO" class="headerlink" title="15、UFO"></a>15、UFO</h3><p>为UIead Photolm apct的专用图像格式，能完整记录所有Photolmapct处理过的图像属性。</p><p>UFO文件以对象来代替图层记录图像信息。</p><h3 id="16、EPS"><a href="#16、EPS" class="headerlink" title="16、EPS"></a>16、EPS</h3><p>Encapsulated Post Script</p><p>EPS文件是桌面印刷系统普遍使用的通用交换格式当中的一种综合格式。EPS文件格式又被称为带有预视图象的PS格式，它是由一个PostScript语言的文本文件和一个（可选）低分辨率的由PICT或TIFF格式描述的代表像组成。</p><p>主要用于排版打印等输出工作</p><h3 id="17、AI"><a href="#17、AI" class="headerlink" title="17、AI"></a>17、AI</h3><p>一种分层文件，每个对象都是独立的，以这种格式保存的文件便于修改。</p><p>这种格式文件可以在任何尺寸大小下按最高分辨率输出，兼容性较高</p><h3 id="18、RAW"><a href="#18、RAW" class="headerlink" title="18、RAW"></a>18、RAW</h3><p>RAW Image Format</p><p>一种记录了数码相机传感器的原始信息，同时记录了由相机拍摄所产生的一些元数据（Metadata，如ISO的设置、快门速度、光圈值、白平衡等）的文件。RAW是未经处理、也未经压缩的格式，可以把RAW概念化为“原始图像编码数据”或更形象的称为“数字底片”</p><p>即相机保留的一组数据。此数据即为拍摄数据，可以随意调整</p>]]></content>
      
      
      <categories>
          
          <category> 图片格式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片隐写</title>
      <link href="/2021/11/05/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/"/>
      <url>/2021/11/05/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h3 id="1、头文件缺失"><a href="#1、头文件缺失" class="headerlink" title="1、头文件缺失"></a>1、头文件缺失</h3><p><img src="https://img-blog.csdnimg.cn/20200714132519595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FURldVUw==,size_16,color_FFFFFF,t_70" alt="img"></p><p>zip文件头：50 4B 03 04</p><p>PNG文件头：89 50 4E 47 0D 0A 1A 0A 00 00 00 0D</p><p>对于文件头缺失的文件，一般都是粘贴，如果选择写入会覆盖原来的</p><p>图片高度有问题修改第二排前16位，前面是宽后面是高</p><h3 id="2、LBS隐写：最低有效位-StegSolve"><a href="#2、LBS隐写：最低有效位-StegSolve" class="headerlink" title="2、LBS隐写：最低有效位  StegSolve"></a>2、LBS隐写：最低有效位  StegSolve</h3><p>用嵌入的秘密信息取代载体图像的最低比特位，原来的7个高低平面与替代 秘密信息的最低位平面组合成含隐藏信息对等的新图形。</p><p>png图片：一种无损压缩的位图片形格式，也只有在无损压缩或者无压缩的      图片（BMP）上实现lsb隐写。</p><p>如果图像是jpg图片的话，就没法使用lsb隐写了，原因是jpg图片对像数进行了有损压缩，我们修改的信息就可能会在压缩的过程中被破坏。</p><p>而png图片虽然也有压缩，但却是无损压缩，这样我们修改的信息也就能得到正确的表达，不至于丢失。BMP的图片也是一样的，是没有经过压缩的。BMP图片一般是特别的大的，因为BMP把所有的像数都按原样储存，没有进行压缩。</p><p>LSB隐写就是修改RGB颜色分量的最低二进制位也就是最低有效位（LSB）每个像数可以携带3比特的信息。</p><p><img src="https://image-static.segmentfault.com/108/897/1088978167-5b88d68b97c13_articlex"></p><p>修改最低有效位的信息的算法就叫做lsb加密算法，提取最低有效位信息的算法叫做lsb解密算法。</p><p>由于图像是由像素构成的，每个像素有8位(对于BMP图像来说),通常最后一位的变化，通过肉眼是无法察觉的</p><p>MSB是最高有效位，Bit Plane Order代表颜色的排序方式</p><p>字节上的读取顺序与<code>Bit Order</code>选项有关，如果设置了MSBFirst，是从高位开始读取，LSBFirst是从低位开始读取</p><p>先左右滑动查看，发现red、blue、green均为0 </p><p><img src="https://img-blog.csdnimg.cn/20201128155355874.png"></p><p>然后选择Data Extract，抽取数据</p><p><em>File Format：文件格式，这个主要是查看图片的具体信息</em></p><p><em>Data Extract：数据抽取，图片中隐藏数据的抽取</em></p><p><em>Frame Browser：帧浏览器，主要是对GIF之类的动图进行分解，动图变成一张张                                      图片，便于查看</em></p><p><em>Image Combiner：拼图，图片拼接</em></p><h3 id="3、zsteg："><a href="#3、zsteg：" class="headerlink" title="3、zsteg："></a>3、zsteg：</h3><p>（1）查看LSB：</p><pre><code>zsteg xxx.bmp zsteg xxx.png zsteg -a (文件名)    #查看各个通道的lsb</code></pre><p>（2）检测zlib：</p><pre><code>#-b的位数是从1开始的 zsteg zlib.bmp -b 1 -o xy -v</code></pre><p>（3）提取该通道图片：</p><pre><code>zsteg -e b8,a,lsb,xy 文件.png -&gt; out.png</code></pre><p>先放winhex里，没有找到flag，kali打开，没有修改宽高，binwalk分析，没有隐藏文件，尝试用zsteg工具，发现一串base密码，解密即可</p><h3 id="4、动图"><a href="#4、动图" class="headerlink" title="4、动图"></a>4、动图</h3><p>看到动图先一帧一帧的看但是没有看到任何信息</p><p>尝试用StegSolve查看，向左查看发现red plane 7的时候变化较大，用Frame Browser（帧浏览器）查看，发现只有上半的时候可能藏有flag，再保存下来，查看到red plane 2 的时候即可发现flag。（这道题没怎么明白原理）</p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
            <tag> 图片隐写 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
